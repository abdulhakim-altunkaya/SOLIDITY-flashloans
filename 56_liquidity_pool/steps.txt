☔ We will create a custom function requesting funds from Aave. such as "flashloan()"
For aave flashloan we need to implement "IFlashLoanSimpleReceiverBase.sol"
and we need to include "executeOperation()" function inside our contract. 
This function will be called by Aave. This function will include our arbitrage and a logic
to let aave to pull back loan+fee
☔ Remix erros: 1) connect metamask to remix, 2) transfer a little flashloan currency(usdc/usdt/dai/etc)
 to the contract for paying gas, 3)pragma versions must be the same: hardhat/contracts 

☔ ARBITRAGE:
first deploy dex, then deploy arbitrage.
Copy dex address and paste it inside the arbitrage contract. Go to arbitrage deployment file and paste POOL address.
after you deploy dex, fund it with some dai and usdc so that it will have liquidity for flashloan later.
To deposit usdc/dai inside the dex contract, you can use metamask or dex contract interface on remix.
Actually you should use only metamask to send tokens to the dex. If you use contract interface, thats another thing. 
After depositing some usdc and dai inside dex contract, we must also approve dex contract.
to apprrove dex contract, go to your flashloan contract, find approve function and enter
dex contract address and amount you want to wwithdraw. Amount should of course be less than liquidity.
For usdc enter 1000000000 (1000 usdc), 1200000000000000000000 (1200 dai)
Then click allowance buttons to see if the amounts are approved.
then go requestFlashloan function and request 1000000000 (1000 usdc)

If you want to replace dai, replace it with another token of 18 decimals. 
If you want to replace usdc, replace it with another token of 6 decimals.

♿ npm install hardhat ethers dotenv
npm install "@aave/core-v3" 
npm install "@nomicfoundation/hardhat-toolbox"

♿ replenish your metamask account from aave faucet, grab some usdc and dai
staging.aave.com/faucet/

♿ Create your .env file:
PRIVATE_KEY="be9447a80b901b07fb1381ea796260656a8faa1001fd67cc26459ad9999ccd25"
PROVIDER_URL=`https://fantom-testnet.s.chainbase.online/v1/2G8K0Aa3WVTSSGCSHq2Hx3NyQNt`


♿ Dont forget to send some tokens to your your contract. If you will request USDC as flashloan,
then send some usdc to your contract. The same for other tokens. Because your contract
needs to pay fee in the currency it borrows.

♿ Update your hardhat.config.js:
require("@nomicfoundation/hardhat-toolbox");
require("dotenv").config();
module.exports = {
  solidity: "0.8.10",
  networks: {
    goerli: {
      url: process.env.PROVIDER_URL,
      accounts: [`0x${process.env.PRIVATE_KEY}`]
    }
  }
};






[
  PRIVATE_KEY_MUMBAI="be9447a80b901b07fb1381ea796260656a8faa1001fd67cc26459ad9999ccd25"
  PRIVATE_KEY_GOERLI="e4d9ebd93bb2e1e3799f761d76c6192392a986fb64c68417eeb2eda670c84383"
  PROVIDER_URL_MUMBAI=`https://polygon-mumbai.g.alchemy.com/v2/JMS-sd2ahj5_1MAsO6GCT77JQ16LiJOA`
  PROVIDER_URL_GOERLI=`https://eth-goerli.g.alchemy.com/v2/y4tP-sLX0TTuIzbALxBr8AyrEZDOH3Ef`
  PROVIDER_URL_FANTOM=`https://fantom-testnet.s.chainbase.online/v1/2G8K0Aa3WVTSSGCSHq2Hx3NyQNt`
  PROVIDER_URL_AVAX=`https://avax.getblock.io/testnet/ext/bc/C/rpc?api_key=b0cbe8fa-d042-4b86-8218-b6a438989a65`
  PROVIDER_URL_FUJI_2=`wss://api.avax-test.network/ext/bc/C/ws`
  PROVIDER_URL_FUJI_3=`https://api.avax-test.network/`
  PROVIDER_URL_FUJI_4= `https://convincing-lively-snow.avalanche-testnet.discover.quiknode.pro/66b0940ffad8cd1a4ed7dcd827036569bcf5ba34/`
]


TESTNET_GOERLI=""
USDC_GOERLI_ETHERSCAN="0xA2025B15a1757311bfD68cb14eaeFCc237AF5b43"
DAI_GOERLI_ETHERSCAN="0xDF1742fE5b0bFc12331D8EAec6b478DfDbD31464"
GOERLI_POOLPROVIDER_DEPLOY="0xc4dCB5126a3AfEd129BC3668Ea19285A9f56D15D"

TESTNET_AVALANCHE=""
SNOWTRACE_USDT="0xD90db1ca5A6e9873BCD9B0279AE038272b656728"
SNOWTRACE_USDC="0x3E937B4881CBd500d05EeDAB7BA203f2b7B3f74f"
SNOWTRACE_DAI="0xFc7215C9498Fc12b22Bc0ed335871Db4315f03d3"

TESTNET_FANTOM=""
AAVE_POOLADDRESSPROVIDER="0xE339D30cBa24C70dCCb82B234589E3C83249e658"
USDT="0x1b901d3C9D4ce153326BEeC60e0D4A2e8a9e3cE3"
DAI="0xc469ff24046779DE9B61Be7b5DF91dbFfdF1AE02"
USDC="0x06f0790c687A1bED6186ce3624EDD9806edf9F4E"
CURVE="0xAC1a9503D1438B56BAa99939D44555FC2dC286Fc";

aCURVE = "0x552f5C364090B954ADA025f0D7963D0a7A60d52b";



FOR REMIX IN CASE YOU NEED:
import {FlashLoanSimpleReceiverBase} from "https://github.com/aave/aave-v3-core/blob/master/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol";
import {IPoolAddressesProvider} from "https://github.com/aave/aave-v3-core/blob/master/contracts/interfaces/IPoolAddressesProvider.sol";
import {IERC20} from "https://github.com/aave/aave-v3-core/blob/master/contracts/dependencies/openzeppelin/contracts/IERC20.sol";
